server:
  port: 8080
  servlet:
    encoding:
      charset: UTF-8
      enabled: true
      force: true
      force-response: true
    session.timeout: 600

logging:
  level:
    org.springframework.security: DEBUG

spring:
  thymeleaf:
    cache: false
    prefix: classpath:/templates/
    suffix: .html
  devtools:
    livereload:
      enabled: true
    restart:
      enabled: true

  datasource:
    driver-class-name: org.h2.Driver
    url: 'jdbc:h2:mem:test;MODE=MySQL'
    #    url: 'jdbc:h2:~/data/tarot;MODE=MySQL'
    username: sa
    password:

#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: 'jdbc:mysql://localhost:3306/tarot?useSSL=false&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul'
#    username: root
#    password: sasa
  h2:
    console:
      enabled: true
      path: /h2-console

  jpa:
    database: h2
    database-platform: org.hibernate.dialect.H2Dialect
#    database: mysql
#    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        dialect: org.hibernate.dialect.H2Dialect
#        dialect: org.hibernate.dialect.MySQLDialect
        show_sql: true
        format_sql: true
        encoding: UTF-8
        type:
          json_format_mapper: com.tarot.config.CustomJacksonJsonFormatMapper

jwt:
  secret: and0dGVzdGp3dHRlc3Rqd3R0ZXN0and0dGVzdGp3dHRlc3Q=
  expiration: 10_000

springdoc:
  packages-to-scan: com.tarot.controller
  paths-to-match: /**
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: /tarot/swagger-ui.html
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: alpha

security:
  oauth2:
    client:
      registration:
        github:
          client-id: 1
          client-secret: 1
          scope: name,email,avatar_url
        google:
          redirection-url: ${google-redirection-url}
          client-id: ${google-client-id}
          client-secret: ${google-client-secret}
          scope: profile,email
#        naver:
#          client-id: 1
#          client-secret: 1
#          redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
#          authorization_grant_type: authorization_code
#          scope: name,email,profile_image
#          client-name: Naver